//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.16 at 03:58:25 PM IDT 
//


package Logic.SystemEngine;

import Logic.Exceptions.MapBoundriesException;

import javax.xml.bind.annotation.*;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="width" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="length" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "MapBoundries")
public class MapBoundries {
    public static final int MAXIMUM_SIZE = 100;
    public static final int MINIMUM_SIZE = 6;
    @XmlAttribute(name = "width", required = true)
    protected int width;
    @XmlAttribute(name = "length", required = true)
    protected int length;


    /**
     * Gets the value of the width property.
     * 
     */
    public int getWidth() { return width; }

    /**
     * Sets the value of the width property.
     * 
     */
    public void setWidth(int value) throws MapBoundriesException {
        this.width = value;
    }

    /**
     * Gets the value of the length property.
     * 
     */
    public int getLength() {
        return length;
    }

    /**
     * Sets the value of the length property.
     * 
     */
    public void setLength(int value) throws MapBoundriesException {
        this.length = value;
    }

    public void checkMapBoundries () throws MapBoundriesException {
        if(length < MapBoundries.MINIMUM_SIZE || length > MapBoundries.MAXIMUM_SIZE)
            throw new MapBoundriesException(length, "length");
        else if (width  < MapBoundries.MINIMUM_SIZE || width > MapBoundries.MAXIMUM_SIZE )
            throw new MapBoundriesException(width, "width");

    }

}
